Local File Inclusion | LFI

A Local File Include (LFI) vulnerability consists of including a local file from user input. In certain cases this 
allows access to files not located in the webroot or even to execute code.


-> Open the vulnerable Mutillidae site
Mutillidae should be installed in the Win10 machine.
On Kali, open http://<Win10 IP>/mutillidae.
Put Security level at 0 (Hosed).

-> Try an intrusion
1. Choose on the left OWASP 2017 / A5 - Broken Access Control / Insecure Direct Object References / Text File Viewer
    
2. Try to view one file.
  Click on "View file" and constate the file is displayed.

3. Inspect the code.
  Right-click on the Text File Name Box to display code.
  Into the first line, replace the URL by another file name, ie robots.txt then Enter and close the Inspect windows with [X].
  >>> before: <option value="http://www.textfiles.com/hacking/auditool.txt">Intrusion ... January 29, 1991)</option>
  >>> after : <option value="robots.txt">Intrusion ... Detection in Computers by Victor H. Marshall (January 29, 1991)</option>
  Click on "View File".
  >>> you should see the content of the robots.txt file.  

4. Retry with critical file, like "../../passwords.txt".
  >>> That works the same.

5. Observe the URL
  After a request, you will see that the URL containts a file name, here: text-file-viewer.php
  >>> the complete request: http://<win10 IP>/mutillidae/index.php?page=text-file-viewer.php
  Try http://<win10 IP>/mutillidae/index.php?page=robots.txt
  >>> That works again !! 
  /!\ By that way, it is possible to recover /etc/password !!!

>@
>@##################################################################################################################################
>@#                                                                                                                                #
>@# [ Local File Inclusion | LFI ]                                                                                                 #                                                                                    
>@#                                                                                                                                #
>@# A Local File Include (LFI) vulnerability consists of including a local file from user input. In certain cases this allows      #
>@# access to files not located in the webroot or even to execute code.                                                            #
>@#                                                                                                                                #
>@# See: howto-1075-owasp-top-10.txt                                                                                               #
>@# See: howto-1076-owasp-top-10-fr.tx                                                                                             #
>@#                                                                                                                                #
>@#--------------------------------------------------------------------------------------------------------------------------------#
>@
>@-> Open the vulnerable Mutillidae site
>@Mutillidae should be installed in the Win10 machine.
>@On Kali, open http://<Win10 IP>/mutillidae.
>@Put Security level at 0 (Hosed).
>@
>@-> Try an intrusion
>@1. Choose on the left OWASP 2017 / A5 - Broken Access Control / Insecure Direct Object References / Text File Viewer
>@    
>@2. Try to view one file.
>@  Click on "View file" and constate the file is displayed.
>@
>@3. Inspect the code.
>@  Right-click on the Text File Name Box to display code.
>@  Into the first line, replace the URL by another file name, ie robots.txt then Enter and close the Inspect windows with [X].
>@  >>> before: <option value="http://www.textfiles.com/hacking/auditool.txt">Intrusion ... January 29, 1991)</option>
>@  >>> after : <option value="robots.txt">Intrusion ... Detection in Computers by Victor H. Marshall (January 29, 1991)</option>
>@  Click on "View File".
>@  >>> you should see the content of the robots.txt file.  
>@
>@4. Retry with critical file, like "../../passwords.txt".
>@  >>> That works the same.
>@
>@5. Observe the URL
>@  After a request, you will see that the URL containts a file name, here: text-file-viewer.php
>@  >>> the complete request: http://<win10 IP>/mutillidae/index.php?page=text-file-viewer.php
>@  Try http://<win10 IP>/mutillidae/index.php?page=robots.txt
>@  >>> That works again !! 
>@  /!\ By that way, it is possible to recover /etc/password !!!
>@
>@##################################################################################################################################
>@
