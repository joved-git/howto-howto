
Une faille LFI consiste à exploiter une fonctionnalité proposée par l’application pour inclure un autre 
fichier qui se trouve sur le système exécutant l’application. Dans certains cas, cette vulnérabilité peut 
être combinée avec une attaque appelée « Path Traversal », qui vise à naviguer vers les répertoires 
parents pour pouvoir inclure n’importe quel fichier du système.

Selon la manière dont le fichier est inclus, un attaquant peut exploiter cette vulnérabilité pour exécuter 
du code sur le serveur, particulièrement si le contenu du fichier est interprété.

Il peut également piéger d’autres utilisateurs s’il parvient à contrôler le contenu d’un fichier sur le 
serveur, par exemple en utilisant une attaque de type XSS (Cross-Site Scripting). En outre, il peut 
simplement obtenir des informations sensibles, telles que le code source de l’application ou des fichiers 
de logs.

>@
>@##############################################################################################################
>@#                                                                                                            #
>@# [ Faille LFI | Local File Inclusion ]                                                                      #
>@#                                                                                                            #
>@# Une faille LFI consiste à exploiter une fonctionnalité proposée par l’application pour inclure un autre    #
>@# fichier qui se trouve sur le système exécutant l’application. Dans certains cas, cette vulnérabilité peut  #
>@# être combinée avec une attaque appelée « Path Traversal », qui vise à naviguer vers les répertoires        #
>@# parents pour pouvoir inclure n’importe quel fichier du système.                                            #
>@#                                                                                                            #
>@# Selon la manière dont le fichier est inclus, un attaquant peut exploiter cette vulnérabilité pour exécuter #
>@# du code sur le serveur, particulièrement si le contenu du fichier est interprété.                          #
>@#                                                                                                            #
>@# Il peut également piéger d’autres utilisateurs s’il parvient à contrôler le contenu d’un fichier sur le    #
>@# serveur, par exemple en utilisant une attaque de type XSS (Cross-Site Scripting). En outre, il peut        #
>@# simplement obtenir des informations sensibles, telles que le code source de l’application ou des fichiers  #
>@# de logs.                                                                                                   #
>@#                                                                                                            #
>@# Voir: https://www.vaadata.com/blog/exploiting-an-lfi-local-file-inclusion-vulnerability-and-security-tips/ #
>@# Voir: howto-0070-lfi-vulnerability.txt                                                                     #
>@# Voir: howto-0100-prevention-web-vulnerability.txt                                                          #
>@#                                                                                                            #
>@#------------------------------------------------------------------------------------------------------------#
>@

